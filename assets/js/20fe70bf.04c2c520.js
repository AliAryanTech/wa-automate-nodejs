"use strict";(self.webpackChunkdocs_v_3=self.webpackChunkdocs_v_3||[]).push([[4423],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>u});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=n.createContext({}),l=function(e){var t=n.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=l(a),u=r,y=m["".concat(c,".").concat(u)]||m[u]||d[u]||o;return a?n.createElement(y,i(i({ref:t},p),{},{components:a})):n.createElement(y,i({ref:t},p))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var l=2;l<o;l++)i[l]=a[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},8378:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var n=a(7462),r=(a(7294),a(3905));const o={},i="Decrypting Media",s={unversionedId:"how-to/decrypt-media",id:"how-to/decrypt-media",title:"Decrypting Media",description:"Here is a sample of how to decrypt media. This has been tested on images, videos, documents, audio and voice notes.",source:"@site/docs/how-to/decrypt-media.md",sourceDirName:"how-to",slug:"/how-to/decrypt-media",permalink:"/docs/how-to/decrypt-media",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/how-to/decrypt-media.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Creating an API",permalink:"/docs/how-to/create-api"},next:{title:"Detecting Logouts",permalink:"/docs/how-to/detect-logout"}},c={},l=[{value:"404&#39;d",id:"404d",level:2},{value:"Decrypting Stickers",id:"decrypting-stickers",level:2}],p={toc:l};function d(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"decrypting-media"},"Decrypting Media"),(0,r.kt)("p",null,"Here is a sample of how to decrypt media. This has been tested on images, videos, documents, audio and voice notes."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import { create, Client, decryptMedia } from '@open-wa/wa-automate';\nconst mime = require('mime-types');\nconst fs = require('fs');\n\nfunction start(client: Client) {\n  client.onMessage(async message => {\n    if (message.mimetype) {\n      const filename = `${message.t}.${mime.extension(message.mimetype)}`;\n      const mediaData = await decryptMedia(message);\n      const imageBase64 = `data:${message.mimetype};base64,${mediaData.toString(\n        'base64'\n      )}`;\n      await client.sendImage(\n        message.from,\n        imageBase64,\n        filename,\n        `You just sent me this ${message.type}`\n      );\n      fs.writeFile(filename, mediaData, function(err) {\n        if (err) {\n          return console.log(err);\n        }\n        console.log('The file was saved!');\n      });\n    }\n  });\n}\n\ncreate().then(client => start(client));\n")),(0,r.kt)("h2",{id:"404d"},"404'd"),(0,r.kt)("p",null,"You may sometimes get a ",(0,r.kt)("inlineCode",{parentName:"p"},"404")," error when trying to decrypt media from an old message, this is because media is only available on the main servers for a limited period of time. In these circumstances, you will need to force the host account to reupload media. You can do this by using [","[forceStaleMediaUpdate]","] then using decryptMedia on the response."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"      const mediaData = await decryptMedia(client.forceStaleMediaUpdate(message.id));\n")),(0,r.kt)("h2",{id:"decrypting-stickers"},"Decrypting Stickers"),(0,r.kt)("p",null,"Decrypting stickers with the method shown above will result in a blank ",(0,r.kt)("inlineCode",{parentName:"p"},".webp")," file. To decrypt the sticker, use [","[getStickerDecryptable]","]."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"\n      const mediaData = await decryptMedia(client.getStickerDecryptable(message.id));\n      //or\n      const mediaData = await client.decryptMedia(message.id);\n")),(0,r.kt)("p",null,"It is always preferable to keep projects smaller than needed so you can now use a lightweight library called wa-decrypt for projects that do not need all of @open-wa/wa-automate."),(0,r.kt)("p",null,"You can install that using:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"> npm i --save wa-decrypt\n")),(0,r.kt)("p",null,"and import it like so:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import { decryptMedia } from 'wa-decrypt';\n")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/smashah/wa-decrypt#readme"},"Learn more about wa-decrypt here")))}d.isMDXComponent=!0}}]);